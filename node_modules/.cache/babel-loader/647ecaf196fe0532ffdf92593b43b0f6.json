{"ast":null,"code":"var _jsxFileName = \"/Users/phuongnguyen/Desktop/Visual Studio Code/myFood/src/components/Cart/Checkout.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport styles from './Checkout.module.css'; // get value and return true if value is empty. \n//using \"trim\" (white space) to check if the input is empty\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === ''; //to check if the input have 5 characters for the zip code\n\n\nconst isFiveChars = value => value.trim().lenth === 5;\n\nconst Checkout = props => {\n  _s();\n\n  const [formInputValidity, setFormInputValidity] = useState({});\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = event => {\n    event.preventDefault(); // the \"current\" will give you access to the actual value stored\n    // in the ref, this this case, it's the input element\n\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostalCode = postalInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredPostalIsValid = !isFiveChars(enteredPostalCode);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const formIsValid = enteredNameIsValid && enteredStreetIsValid && enteredPostalIsValid && enteredCityIsValid;\n\n    if (formIsValid) {\n      return;\n    } //submit the cart data \n\n  };\n\n  return (\n    /*#__PURE__*/\n    // onSubmit: when click on Submit button, the data will be sent\n    _jsxDEV(\"form\", {\n      className: styles.form,\n      onSubmit: confirmHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Your Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          ref: nameInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"street\",\n          children: \" Street\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"street\",\n          ref: streetInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postal\",\n          children: \" Postal Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"postal\",\n          ref: postalInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"city\",\n          children: \" City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"city\",\n          ref: cityInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: props.onCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(Checkout, \"7wt48wv5COVX7yl72/N6z8mMFkk=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["/Users/phuongnguyen/Desktop/Visual Studio Code/myFood/src/components/Cart/Checkout.js"],"names":["useRef","useState","styles","isEmpty","value","trim","isFiveChars","lenth","Checkout","props","formInputValidity","setFormInputValidity","nameInputRef","streetInputRef","postalInputRef","cityInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostalCode","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredPostalIsValid","enteredCityIsValid","formIsValid","form","control","actions","onCancel"],"mappings":"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","sourcesContent":["import { useRef, useState } from 'react';\n\nimport styles from './Checkout.module.css';\n\n\n// get value and return true if value is empty. \n//using \"trim\" (white space) to check if the input is empty\nconst isEmpty = (value) => value.trim() === '';\n\n//to check if the input have 5 characters for the zip code\nconst isFiveChars = (value) => value.trim().lenth === 5;\n\n\n\n\n\nconst Checkout = (props) => {\n\n  const [formInputValidity, setFormInputValidity] = useState({\n\n  });\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalInputRef = useRef();\n  const cityInputRef = useRef();\n\n\n  const confirmHandler = (event) => {\n    event.preventDefault();\n\n    // the \"current\" will give you access to the actual value stored\n    // in the ref, this this case, it's the input element\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostalCode = postalInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredPostalIsValid = !isFiveChars(enteredPostalCode);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n\n    const formIsValid =\n      enteredNameIsValid &&\n      enteredStreetIsValid &&\n      enteredPostalIsValid &&\n      enteredCityIsValid;\n\n\n    if (formIsValid) {\n\n      return;\n\n    }\n\n    //submit the cart data \n  };\n\n  return (\n    // onSubmit: when click on Submit button, the data will be sent\n    <form className={styles.form} onSubmit={confirmHandler}>\n      <div className={styles.control}>\n        <label htmlFor='name'>Your Name</label>\n        <input type='text' id='name' ref={nameInputRef} />\n      </div>\n\n      <div className={styles.control}>\n        <label htmlFor='street'> Street</label>\n        <input type='text' id='street' ref={streetInputRef} />\n      </div>\n\n      <div className={styles.control}>\n        <label htmlFor='postal'> Postal Code</label>\n        <input type='text' id='postal' ref={postalInputRef} />\n      </div>\n\n      <div className={styles.control}>\n        <label htmlFor='city'> City</label>\n        <input type='text' id='city' ref={cityInputRef} />\n      </div>\n\n      <div className={styles.actions}>\n        {/* when clicking the cancel button, the modal will be closed */}\n        <button type=\"button\" onClick={props.onCancel}>Cancel</button>\n        <button>Confirm</button>\n      </div>\n\n    </form>\n  )\n\n};\n\nexport default Checkout;"]},"metadata":{},"sourceType":"module"}